//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WSResolver
{
    using System;
    using System.Runtime.Serialization;
    using System.ServiceModel;

    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxClientType", Namespace="http://Checkmarx.com")]
    public enum CxClientType : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        None = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        WebPortal = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        CLI = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Eclipse = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        VS = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InteliJ = 5,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Audit = 6,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SDK = 7,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Jenkins = 8,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TFSBuild = 9,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Importer = 10,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Other = 11,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Sonar = 12,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSBasicRepsonse", Namespace="http://Checkmarx.com")]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(WSResolver.CxWSResponseDiscovery))]
    public partial class CxWSBasicRepsonse : object
    {
        
        private bool IsSuccesfullField;
        
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public bool IsSuccesfull
        {
            get
            {
                return this.IsSuccesfullField;
            }
            set
            {
                this.IsSuccesfullField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string ErrorMessage
        {
            get
            {
                return this.ErrorMessageField;
            }
            set
            {
                this.ErrorMessageField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CxWSResponseDiscovery", Namespace="http://Checkmarx.com")]
    public partial class CxWSResponseDiscovery : WSResolver.CxWSBasicRepsonse
    {
        
        private string ServiceURLField;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false)]
        public string ServiceURL
        {
            get
            {
                return this.ServiceURLField;
            }
            set
            {
                this.ServiceURLField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://Checkmarx.com", ConfigurationName="WSResolver.CxWSResolverSoap")]
    public interface CxWSResolverSoap
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://Checkmarx.com/GetWebServiceUrl", ReplyAction="*")]
        System.Threading.Tasks.Task<WSResolver.GetWebServiceUrlResponse> GetWebServiceUrlAsync(WSResolver.GetWebServiceUrlRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWebServiceUrlRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWebServiceUrl", Namespace="http://Checkmarx.com", Order=0)]
        public WSResolver.GetWebServiceUrlRequestBody Body;
        
        public GetWebServiceUrlRequest()
        {
        }
        
        public GetWebServiceUrlRequest(WSResolver.GetWebServiceUrlRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com")]
    public partial class GetWebServiceUrlRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=0)]
        public WSResolver.CxClientType ClientType;
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=1)]
        public int APIVersion;
        
        public GetWebServiceUrlRequestBody()
        {
        }
        
        public GetWebServiceUrlRequestBody(WSResolver.CxClientType ClientType, int APIVersion)
        {
            this.ClientType = ClientType;
            this.APIVersion = APIVersion;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GetWebServiceUrlResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GetWebServiceUrlResponse", Namespace="http://Checkmarx.com", Order=0)]
        public WSResolver.GetWebServiceUrlResponseBody Body;
        
        public GetWebServiceUrlResponse()
        {
        }
        
        public GetWebServiceUrlResponse(WSResolver.GetWebServiceUrlResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://Checkmarx.com")]
    public partial class GetWebServiceUrlResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public WSResolver.CxWSResponseDiscovery GetWebServiceUrlResult;
        
        public GetWebServiceUrlResponseBody()
        {
        }
        
        public GetWebServiceUrlResponseBody(WSResolver.CxWSResponseDiscovery GetWebServiceUrlResult)
        {
            this.GetWebServiceUrlResult = GetWebServiceUrlResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public interface CxWSResolverSoapChannel : WSResolver.CxWSResolverSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.2")]
    public partial class CxWSResolverSoapClient : System.ServiceModel.ClientBase<WSResolver.CxWSResolverSoap>, WSResolver.CxWSResolverSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CxWSResolverSoapClient(string endpointUrl, TimeSpan timeout, string username, string password) :
        base(
            CxWSResolverSoapClient.GetBindingForEndpoint(timeout),
            CxWSResolverSoapClient.GetEndpointAddress(endpointUrl))
        {
            this.ChannelFactory.Credentials.UserName.UserName = username;
            this.ChannelFactory.Credentials.UserName.Password = password;
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }

        public CxWSResolverSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
         base(binding, remoteAddress)
        {
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<WSResolver.GetWebServiceUrlResponse> WSResolver.CxWSResolverSoap.GetWebServiceUrlAsync(WSResolver.GetWebServiceUrlRequest request)
        {
            return base.Channel.GetWebServiceUrlAsync(request);
        }
        
        public System.Threading.Tasks.Task<WSResolver.GetWebServiceUrlResponse> GetWebServiceUrlAsync(WSResolver.CxClientType ClientType, int APIVersion)
        {
            WSResolver.GetWebServiceUrlRequest inValue = new WSResolver.GetWebServiceUrlRequest();
            inValue.Body = new WSResolver.GetWebServiceUrlRequestBody();
            inValue.Body.ClientType = ClientType;
            inValue.Body.APIVersion = APIVersion;
            return ((WSResolver.CxWSResolverSoap)(this)).GetWebServiceUrlAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        //public virtual System.Threading.Tasks.Task CloseAsync()
        //{
        //    return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        //}

        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(TimeSpan timeout)
        {
            var httpsBinding = new BasicHttpsBinding();
            httpsBinding.Security.Transport.ClientCredentialType = HttpClientCredentialType.Basic;
            httpsBinding.Security.Mode = BasicHttpsSecurityMode.Transport;

            var integerMaxValue = int.MaxValue;
            httpsBinding.MaxBufferSize = integerMaxValue;
            httpsBinding.MaxReceivedMessageSize = integerMaxValue;
            httpsBinding.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
            httpsBinding.AllowCookies = true;

            httpsBinding.ReceiveTimeout = timeout;
            httpsBinding.SendTimeout = timeout;
            httpsBinding.OpenTimeout = timeout;
            httpsBinding.CloseTimeout = timeout;

            return httpsBinding;
        }

        private static System.ServiceModel.EndpointAddress GetEndpointAddress(string endpointUrl)
        {
            if (!endpointUrl.StartsWith("https://"))
            {
                throw new UriFormatException("The endpoint URL must start with https://.");
            }
            return new System.ServiceModel.EndpointAddress(endpointUrl);
        }
        public enum EndpointConfiguration
        {
            
            CxWSResolverSoap,
            
            CxWSResolverSoap12,
        }
    }
}
